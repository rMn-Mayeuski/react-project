{"version":3,"file":"static/js/953.85ddbbda.chunk.js","mappings":"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","sources":["webpack://react-project/./src/components/common/MoviesList/Movie/Genres/Genres.module.scss?f1a8","components/common/MoviesList/Movie/Genres/Genres.tsx","webpack://react-project/./src/components/common/MoviesList/Movie/Movie.module.scss?7668","components/common/MoviesList/Movie/Movie.tsx","components/common/MoviesList/Movie/Rating/Rating.tsx","webpack://react-project/./src/components/common/MoviesList/Movie/Rating/Rating.module.scss?48d9","utils/convertNumberUtil.ts","webpack://react-project/./src/components/common/MoviesList/SelectedMovie/SelectedMovie.module.scss?c59c","utils/convertDateUtil.ts","components/common/Slider/SliderButton/SliderButton.tsx","components/common/MoviesList/SelectedMovie/SelectedMovieElements/SelectedMovieElements.tsx","webpack://react-project/./src/components/common/Slider/Slider.module.scss?0bff","webpack://react-project/./src/components/common/Slider/SliderButton/SliderButton.module.scss?3577","components/common/Slider/Slider.tsx","components/common/MoviesList/SelectedMovie/SelectedMovie.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"genres\":\"Genres_genres__dBM9N\"};","import React, {FC} from 'react';\r\nimport {IMovie, IMovieGenre} from \"../../../../../types/types\";\r\n\r\nimport styles from \"./Genres.module.scss\";\r\n\r\nconst Genres = ({genres}: IMovie) => {\r\n    return (\r\n        <div className={styles.genres}>\r\n            {genres?.map((item) => (\r\n                <p key={item.name}>{`${item.name[0].toUpperCase()}${item.name.slice(1)}`}</p>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Genres;","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"Movie_movie__KjLyT\",\"movieTitle\":\"Movie_movieTitle__Vd3lK\",\"movieSubtitle\":\"Movie_movieSubtitle__OEty3\",\"movieSubtitleSeparator\":\"Movie_movieSubtitleSeparator__LF9Yv\"};","import React, {FC} from 'react';\r\nimport styles from \"./Movie.module.scss\";\r\nimport {IMovie} from \"../../../../types/types\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Rating, { RatingVariant } from './Rating/Rating';\r\nimport Genres from './Genres/Genres';\r\nimport posterNotFound from \"../../../../assets/PosterNotFound.jpg\"\r\n\r\ninterface MovieProps {\r\n    movie: IMovie | undefined\r\n    index?: number\r\n}\r\n\r\nconst Movie: FC<MovieProps> = ({movie}) => {\r\n    const navigate = useNavigate();\r\n    const handleMoviePageOpen = () => navigate(`/home/${movie?.id}`)\r\n\r\n    // style={{ backgroundImage: `url(${movie?.poster?.url})` }\r\n    return (\r\n        <div className={styles.movie}>\r\n            <img \r\n                src={movie?.poster?.url ? movie?.poster?.url : posterNotFound}\r\n                onClick={handleMoviePageOpen} \r\n                alt=\"img\"\r\n            />\r\n            <h2 className={styles.movieTitle}>{movie?.name}</h2>\r\n            {!!movie?.rating && <Rating variant={RatingVariant.kp} {...movie}/>}\r\n            <Genres {...movie} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;","import React, {FC} from 'react';\r\nimport { IMovie } from '../../../../../types/types';\r\n\r\nimport styles from \"./Rating.module.scss\";\r\n\r\nexport enum RatingVariant {\r\n    kp = \"kp\",\r\n    imdb = \"imdb\"\r\n}\r\n\r\ninterface RatingProps extends IMovie{\r\n    variant: RatingVariant\r\n}\r\n\r\nconst Rating = ({variant, rating}: RatingProps) => {\r\n    const movieRatingKp = `${rating?.kp}`.split(\"\");\r\n    const movieRatingImdb = `${rating?.imdb}`.split(\"\");\r\n\r\n    return (\r\n        <>\r\n            {variant === RatingVariant.kp\r\n                ?\r\n                <span className={`${styles.rating} ${rating?.kp && (rating?.kp >= 7 ? styles.greenRating : rating?.kp <=5 ? styles.redRating : styles.rating)}`}>\r\n                    {rating?.kp && movieRatingKp[0] + (movieRatingKp[1] || \".\") + (movieRatingKp[2] || \"0\")}\r\n                </span>\r\n                :\r\n                <span className={styles.ratingImdb}>\r\n                    {rating?.imdb && movieRatingImdb[0] + (movieRatingImdb[1] || \".\") + (movieRatingImdb[2] || \"0\")}\r\n                </span>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rating;","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"Rating_rating__xK3dt\",\"ratingImdb\":\"Rating_ratingImdb__rY+Ik\",\"greenRating\":\"Rating_greenRating__7WH5i\",\"redRating\":\"Rating_redRating__fO-2x\"};","export const convertNumber = (num: number | undefined) => {\r\n    return String(num).replace(/(\\d)(?=(\\d\\d\\d)+([^\\d]|$))/g, \"$1 \");\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieTopBlock\":\"SelectedMovie_movieTopBlock__PEQdD\",\"movieLeftSide\":\"SelectedMovie_movieLeftSide__K9TIP\",\"movieRightSide\":\"SelectedMovie_movieRightSide__5kpVe\",\"movieMarkers\":\"SelectedMovie_movieMarkers__9YSBJ\",\"movieTitle\":\"SelectedMovie_movieTitle__civtx\",\"movieRuntime\":\"SelectedMovie_movieRuntime__fBSLB\",\"movieDescription\":\"SelectedMovie_movieDescription__SwMOx\",\"movieElements\":\"SelectedMovie_movieElements__eZt5l\",\"movieElement\":\"SelectedMovie_movieElement__WbO-y\",\"movieElementTitle\":\"SelectedMovie_movieElementTitle__zLqGK\"};","import dayjs from \"dayjs\";\r\nimport 'dayjs/locale/ru';\r\ndayjs.locale(\"ru\");\r\n\r\nexport const convertDate = (date: string | undefined, format: string) => {\r\n    return dayjs(date).format(format)\r\n}","import React, {FC, MouseEventHandler} from 'react';\r\nimport styles from \"./SliderButton.module.scss\";\r\n\r\n\r\n\r\nexport enum SliderButtonDirection {\r\n    prev = \"prev\",\r\n    next = \"next\"\r\n}\r\n\r\ninterface SliderButtonProps {\r\n    direction: SliderButtonDirection\r\n    className?: string\r\n    svgClassName?: string\r\n}\r\n\r\nconst SliderButton: FC<SliderButtonProps> = ({direction, className, svgClassName}) => {\r\n    return (\r\n        <>\r\n            {direction === SliderButtonDirection.next\r\n                ?\r\n                <button className={`${className} ${styles.sliderBtn}`}>\r\n                    <svg width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path className={styles.sliderBtnSvg} d=\"M12.5 11L17.5 6M17.5 6L12.5 1M17.5 6H1\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                    </svg>\r\n                </button>\r\n                :\r\n                <button className={`${className} ${styles.sliderBtn}`}>\r\n                    <svg width=\"19\" height=\"12\" viewBox=\"0 0 19 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path className={styles.sliderBtnSvg} d=\"M6.5 11L1.5 6M1.5 6L6.5 1M1.5 6H18\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                    </svg>\r\n                </button>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SliderButton;","import React, {FC} from 'react';\r\nimport {IMovie, IMoviePerson} from \"../../../../../types/types\";\r\n\r\nimport {convertNumber} from \"../../../../../utils/convertNumberUtil\";\r\nimport styles from \"../SelectedMovie.module.scss\";\r\nimport {convertDate} from \"../../../../../utils/convertDateUtil\";\r\n\r\ninterface SelectedMovieElementsProps {\r\n    movie: IMovie\r\n}\r\n\r\nconst SelectedMovieElements: FC<SelectedMovieElementsProps> = ({movie}) => {\r\n\r\n    const getFilteredPersons = (value: string) => {\r\n        return movie.persons?.filter((item: IMoviePerson) =>\r\n            item.enProfession === value ? item.name : undefined\r\n        );\r\n    };\r\n\r\n    const config = [\r\n        {\r\n            title: \"Год производства\",\r\n            value: movie.year,\r\n            condition: movie.year ? movie.year : \"\",\r\n        },\r\n        {\r\n            title: \"Премьера в мире\",\r\n            value: convertDate(movie.premiere?.world, \"D MMMM YYYY\"),\r\n            condition: movie.premiere?.world ? movie.premiere?.world : \"\",\r\n        },\r\n        {\r\n            title: \"Бюджет\",\r\n            value: `$${convertNumber(movie.budget?.value)}`,\r\n            condition: movie.budget?.value ? movie.budget?.value : \"\",\r\n        },\r\n        {\r\n            title: \"Сборы в мире\",\r\n            value: `$${convertNumber(movie.fees?.world?.value)}`,\r\n            condition: movie.fees?.world?.value ? movie.fees?.world?.value : \"\",\r\n        },\r\n        {\r\n            title: \"Страна\",\r\n            value: movie.countries?.map((item) => <p key={item.name}>{item.name}</p>),\r\n            condition: movie.countries?.length ? movie.countries?.length : \"\",\r\n        },\r\n        {\r\n            title: \"Производство\",\r\n            value: movie.productionCompanies?.map((item) => <p key={item.name}>{item.name}</p>),\r\n            condition: movie.productionCompanies?.length ? movie.productionCompanies?.length : \"\"\r\n        },\r\n        {\r\n            title: \"В главных ролях\",\r\n            value: getFilteredPersons(\"actor\")?.map((actor) => (\r\n                <p key={actor.id}>{actor.name}</p>\r\n            )).slice(0,4),\r\n            condition: getFilteredPersons(\"actor\") ? getFilteredPersons(\"actor\") : \"\"\r\n        },\r\n        {\r\n            title: \"Режиссер\",\r\n            value: getFilteredPersons(\"director\")?.map((director) => (\r\n                <p key={director.id}>{director.name}</p>\r\n            )),\r\n            condition: getFilteredPersons(\"director\") ? getFilteredPersons(\"director\") : \"\" \r\n        },\r\n        {\r\n            title: \"Продюссер\",\r\n            value: getFilteredPersons(\"producer\")?.map((producer) => (\r\n                <p key={producer.id}>{producer.name}</p>\r\n            )),\r\n            condition: getFilteredPersons(\"producer\") ? getFilteredPersons(\"producer\") : \"\",\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className={styles.movieElements}>\r\n            {config.map((item) =>\r\n                item.condition && (\r\n                    <div key={item.title} className={styles.movieElement}>\r\n                        <div className={styles.movieElementTitle}>{item.title}</div>\r\n                        <div className={styles.movieElementValue}>{item.value}</div>\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SelectedMovieElements;","// extracted by mini-css-extract-plugin\nexport default {\"swiperWrapper\":\"Slider_swiperWrapper__Hk2bE\",\"sliderDescription\":\"Slider_sliderDescription__FYxDv\",\"sliderTitle\":\"Slider_sliderTitle__JGSsG\",\"sliderButtons\":\"Slider_sliderButtons__6PDCn\"};","// extracted by mini-css-extract-plugin\nexport default {\"sliderBtn\":\"SliderButton_sliderBtn__UjNql\",\"sliderBtnSvg\":\"SliderButton_sliderBtnSvg__8izYN\"};","import React, {FC} from 'react';\r\nimport SwiperClass, {Swiper, useSwiper} from 'swiper/react';\r\nimport {Navigation} from 'swiper';\r\nimport \"swiper/css/navigation\";\r\n\r\nimport styles from \"./Slider.module.scss\";\r\nimport SliderButton, {SliderButtonDirection} from \"./SliderButton/SliderButton\";\r\nimport {IWithChildren} from \"../../../types/types\";\r\n\r\n\r\nconst Slider: FC<IWithChildren> = ({children}) => {\r\n   // @ts-ignore\r\n    const swiperr = (swiper: SwiperClass) => {\r\n        return  swiper.navigation.destroy()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.sliderDescription}>\r\n                {!!children && <h2 className={styles.sliderTitle}>Похожие</h2>}\r\n                <div className={styles.sliderButtons}>\r\n                    <SliderButton className=\"prevBtn\" direction={SliderButtonDirection.prev}/>\r\n                    <SliderButton className=\"nextBtn\" direction={SliderButtonDirection.next}/>\r\n                </div>\r\n            </div>\r\n            <Swiper\r\n                className={styles.swiperWrapper}\r\n                modules={[Navigation]}\r\n                spaceBetween={40}\r\n                centeredSlides={false}\r\n                slidesPerView={1}\r\n                slidesPerGroup={1}\r\n                navigation={{\r\n                    nextEl: \".nextBtn\",\r\n                    prevEl: \".prevBtn\",\r\n                }}\r\n                breakpoints={{\r\n                    850: {\r\n                        slidesPerView: 3,\r\n                        slidesPerGroup: 1,\r\n                        spaceBetween: 20,\r\n                        centeredSlides: true,\r\n                    },\r\n                    1000: {\r\n                        slidesPerView: 3,\r\n                        slidesPerGroup: 3,\r\n                        spaceBetween: 40,\r\n                        centeredSlides: true,\r\n                    },\r\n                }}\r\n            >\r\n                {children}\r\n            </Swiper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Slider;","import React, {FC, useEffect, useState} from 'react';\r\nimport {IMovie, IMovieSimilar} from \"../../../../types/types\";\r\nimport SelectedMovieElements from \"./SelectedMovieElements/SelectedMovieElements\";\r\nimport posterNotFound from \"../../../../assets/PosterNotFound.jpg\"\r\nimport styles from \"./SelectedMovie.module.scss\";\r\nimport Genres from '../Movie/Genres/Genres';\r\nimport Rating, { RatingVariant } from '../Movie/Rating/Rating';\r\nimport Slider from \"../../Slider/Slider\";\r\nimport {SwiperSlide} from \"swiper/react\";\r\nimport Movie from \"../Movie/Movie\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport MovieService from \"../../../../services/movieService\";\r\n\r\ninterface SelectedMovieProps {\r\n    movie: IMovie\r\n}\r\n\r\nconst SelectedMovie: FC<SelectedMovieProps> = ({movie}) => {\r\n    // const {\r\n    //     name,\r\n    //     rating,\r\n    //     similarMovies,\r\n    //     id,\r\n    //     fees,\r\n    //     genres,\r\n    //     budget,\r\n    //     movieLength,\r\n    //     countries,\r\n    //     description,\r\n    //     premiere,\r\n    //     poster,\r\n    //     sequelsAndPrequels,\r\n    //     year\r\n    //     } = props;\r\n\r\n    const similars = movie.similarMovies?.filter((item: IMovieSimilar) =>\r\n        item.name?.length ? item : undefined\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.movieTopBlock}>\r\n                <div className={styles.movieLeftSide}>\r\n                    <img src={movie.poster?.url ? movie.poster?.url : posterNotFound} alt=\"img\"/>\r\n                    <div className={styles.actionButtons}>\r\n                        {/*<button>*/}\r\n                        {/*    <svg></svg>*/}\r\n                        {/*</button>*/}\r\n                        {/*<button>*/}\r\n                        {/*    <svg></svg>*/}\r\n                        {/*</button>*/}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.movieRightSide}>\r\n                    <Genres {...movie}/>\r\n                    <h2 className={styles.movieTitle}>{movie.name}</h2>\r\n                    <div className={styles.movieMarkers}>\r\n                        {!!movie.rating?.kp && <Rating variant={RatingVariant.kp} {...movie}/>}\r\n                        {!!movie.rating?.imdb && <Rating variant={RatingVariant.imdb} {...movie}/>}\r\n                        <div className={styles.movieRuntime}>{`${movie.movieLength} min`}</div>\r\n                    </div>\r\n                    <p className={styles.movieDescription}>{movie.description}</p>\r\n                    <SelectedMovieElements movie={movie}/>\r\n                </div>\r\n            </div>\r\n            <div className={styles.movieBottomBlock}>\r\n                {/*<div>*/}\r\n                {/*    {movie.similarMovies?.map((item) => (*/}\r\n                {/*        <Movie movie={item} key={item.id}/>*/}\r\n                {/*    ))}*/}\r\n                {/*</div>*/}\r\n                <Slider>\r\n                    {!!similars?.length && similars?.map((elem) => (\r\n                        <SwiperSlide key={elem.id}>\r\n                            <Movie movie={elem} key={elem.id}/>\r\n                        </SwiperSlide>\r\n                    ))}\r\n                </Slider>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectedMovie;"],"names":["genres","className","styles","map","item","name","toUpperCase","slice","movie","navigate","useNavigate","src","poster","url","posterNotFound","onClick","id","alt","rating","Rating","variant","RatingVariant","Genres","movieRatingKp","kp","split","movieRatingImdb","imdb","convertNumber","num","String","replace","dayjs","SliderButtonDirection","date","format","getFilteredPersons","value","persons","filter","enProfession","undefined","config","title","year","condition","premiere","world","budget","fees","countries","length","productionCompanies","actor","director","producer","direction","svgClassName","next","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","children","prev","modules","Navigation","spaceBetween","centeredSlides","slidesPerView","slidesPerGroup","navigation","nextEl","prevEl","breakpoints","similars","similarMovies","movieLength","description","elem","Movie"],"sourceRoot":""}